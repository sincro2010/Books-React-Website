{"ast":null,"code":"var _jsxFileName = \"/Users/Pavel/Documents/\\u0443\\u0447\\u0435\\u0308\\u0431\\u0430/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u0424\\u0430\\u0438\\u0306\\u043B\\u044B/Books/client/src/components/button-is-subscription/button-is-subscription.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppRoute, AuthorizationStatus, ButtonTypes } from '../../common/const';\nimport { changeFavorite } from '../../store/api-actions';\nimport { connect } from \"react-redux\";\nimport { ActionCreator } from \"../../store/action\"; // const ButtonIsFavorite = (props) => {\n//   const {id, isFavorite, nameButton, authorizationStatus, onClick, redirectToLogin, addToFavorites} = props;\n//   const cardFavoriteHandler = () => {\n//     if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n//       redirectToLogin(AppRoute.LOGIN);\n//     } else {\n//       onClick({\n//         id,\n//         status: Number(!isFavorite)\n//       });\n//       if (nameButton === `ROOM`) {\n//         addToFavorites();\n//       }\n//     }\n//   };\n//   const bookmarkClass = isFavorite && ButtonTypes[nameButton].favorite;\n//   const bookmarkText = isFavorite ? `In bookmarks` : `To bookmarks`;\n//   return (\n//     <button\n//       onClick={() => cardFavoriteHandler()}\n//       className={`${ButtonTypes[nameButton].noFavorite} ${bookmarkClass} button`}\n//       type=\"button\"\n//       data-testid=\"button\"\n//     >\n//       <svg className={ButtonTypes[nameButton].icon} width={ButtonTypes[nameButton].width} height={ButtonTypes[nameButton].height}>\n//         <use xlinkHref=\"#icon-bookmark\"></use>\n//       </svg>\n//       <span className=\"visually-hidden\">{bookmarkText}</span>\n//     </button>\n//   );\n// };\n// const mapStateToProps = ({USER}) => ({\n//   authorizationStatus: USER.authorizationStatus,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   onClick(favoriteData) {\n//     dispatch(changeFavorite(favoriteData));\n//   },\n//   redirectToLogin(data) {\n//     dispatch(ActionCreator.redirectToRoute(data));\n//   },\n//   addToFavorites() {\n//     dispatch(ActionCreator.changeIsFavoritePlace());\n//   }\n// });\n// ButtonIsFavorite.propTypes = {\n//   id: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.number,\n//   ]).isRequired,\n//   isFavorite: PropTypes.bool.isRequired,\n//   nameButton: PropTypes.string.isRequired,\n//   authorizationStatus: PropTypes.string.isRequired,\n//   onClick: PropTypes.func.isRequired,\n//   redirectToLogin: PropTypes.func.isRequired,\n//   addToFavorites: PropTypes.func.isRequired,\n// };\n// export {ButtonIsFavorite};\n// export default connect(mapStateToProps, mapDispatchToProps)(ButtonIsFavorite);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonIsSubscription = props => {\n  const {\n    redirectToLogin,\n    isSubscription,\n    authorizationStatus\n  } = props;\n\n  if (authorizationStatus = AuthorizationStatus.NO_AUTH) {\n    redirectToLogin(AppRoute.LOGIN);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-price\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"book-button\",\n      children: [\"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u043A\\u0430 \\u20BD \", price, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-icon\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: getBookReader(id),\n        title: title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ButtonIsSubscription;\n\nconst mapStateToProps = state => {};\n\nconst mapDispatchToProps = dispatch => ({\n  // onClick(favoriteData) {\n  //   dispatch(changeFavorite(favoriteData));\n  // },\n  redirectToLogin(url) {\n    dispatch(ActionCreator.redirectToRoute(url));\n  } // addToFavorites() {\n  //   dispatch(ActionCreator.changeIsFavoritePlace());\n  // }\n\n\n});\n\nexport { ButtonIsSubscription };\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonIsSubscription);\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonIsSubscription\");","map":{"version":3,"names":["React","PropTypes","AppRoute","AuthorizationStatus","ButtonTypes","changeFavorite","connect","ActionCreator","ButtonIsSubscription","props","redirectToLogin","isSubscription","authorizationStatus","NO_AUTH","LOGIN","price","getBookReader","id","title","mapStateToProps","state","mapDispatchToProps","dispatch","url","redirectToRoute"],"sources":["/Users/Pavel/Documents/учёба/Программирование/Файлы/Books/client/src/components/button-is-subscription/button-is-subscription.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {AppRoute, AuthorizationStatus, ButtonTypes} from '../../common/const';\nimport {changeFavorite} from '../../store/api-actions';\nimport {connect} from \"react-redux\";\nimport {ActionCreator} from \"../../store/action\";\n\n// const ButtonIsFavorite = (props) => {\n//   const {id, isFavorite, nameButton, authorizationStatus, onClick, redirectToLogin, addToFavorites} = props;\n\n//   const cardFavoriteHandler = () => {\n//     if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n//       redirectToLogin(AppRoute.LOGIN);\n//     } else {\n//       onClick({\n//         id,\n//         status: Number(!isFavorite)\n//       });\n//       if (nameButton === `ROOM`) {\n//         addToFavorites();\n//       }\n//     }\n//   };\n\n//   const bookmarkClass = isFavorite && ButtonTypes[nameButton].favorite;\n//   const bookmarkText = isFavorite ? `In bookmarks` : `To bookmarks`;\n\n//   return (\n//     <button\n//       onClick={() => cardFavoriteHandler()}\n//       className={`${ButtonTypes[nameButton].noFavorite} ${bookmarkClass} button`}\n//       type=\"button\"\n//       data-testid=\"button\"\n//     >\n//       <svg className={ButtonTypes[nameButton].icon} width={ButtonTypes[nameButton].width} height={ButtonTypes[nameButton].height}>\n//         <use xlinkHref=\"#icon-bookmark\"></use>\n//       </svg>\n//       <span className=\"visually-hidden\">{bookmarkText}</span>\n//     </button>\n//   );\n// };\n\n// const mapStateToProps = ({USER}) => ({\n//   authorizationStatus: USER.authorizationStatus,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onClick(favoriteData) {\n//     dispatch(changeFavorite(favoriteData));\n//   },\n//   redirectToLogin(data) {\n//     dispatch(ActionCreator.redirectToRoute(data));\n//   },\n//   addToFavorites() {\n//     dispatch(ActionCreator.changeIsFavoritePlace());\n//   }\n// });\n\n// ButtonIsFavorite.propTypes = {\n//   id: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.number,\n//   ]).isRequired,\n//   isFavorite: PropTypes.bool.isRequired,\n//   nameButton: PropTypes.string.isRequired,\n//   authorizationStatus: PropTypes.string.isRequired,\n//   onClick: PropTypes.func.isRequired,\n//   redirectToLogin: PropTypes.func.isRequired,\n//   addToFavorites: PropTypes.func.isRequired,\n// };\n\n// export {ButtonIsFavorite};\n// export default connect(mapStateToProps, mapDispatchToProps)(ButtonIsFavorite);\n\nconst ButtonIsSubscription = (props) => {\n  const {redirectToLogin, isSubscription, authorizationStatus} = props;\n\n  if (authorizationStatus = AuthorizationStatus.NO_AUTH) {\n    redirectToLogin(AppRoute.LOGIN)\n  }\n\n  return (\n    <div className=\"book-price\">\n                  <button className=\"book-button\">Подписка &#8381; {price} </button>\n                  <div className=\"book-icon\">\n                    <Link to={getBookReader(id)} title={title}>{title}</Link>\n                  </div>\n      </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => {\n  \n}\n\n  const mapDispatchToProps = (dispatch) => ({\n    // onClick(favoriteData) {\n    //   dispatch(changeFavorite(favoriteData));\n    // },\n    redirectToLogin(url) {\n      dispatch(ActionCreator.redirectToRoute(url));\n    },\n    // addToFavorites() {\n    //   dispatch(ActionCreator.changeIsFavoritePlace());\n    // }\n  });\n\nexport {ButtonIsSubscription};\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonIsSubscription);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBC,mBAAlB,EAAuCC,WAAvC,QAAyD,oBAAzD;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,oBAA5B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;EACtC,MAAM;IAACC,eAAD;IAAkBC,cAAlB;IAAkCC;EAAlC,IAAyDH,KAA/D;;EAEA,IAAIG,mBAAmB,GAAGT,mBAAmB,CAACU,OAA9C,EAAuD;IACrDH,eAAe,CAACR,QAAQ,CAACY,KAAV,CAAf;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACc;MAAQ,SAAS,EAAC,aAAlB;MAAA,uEAAkDC,KAAlD;IAAA;MAAA;MAAA;MAAA;IAAA,QADd,eAEc;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE,QAAC,IAAD;QAAM,EAAE,EAAEC,aAAa,CAACC,EAAD,CAAvB;QAA6B,KAAK,EAAEC,KAApC;QAAA,UAA4CA;MAA5C;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFd;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAhBD;;KAAMV,oB;;AAkBN,MAAMW,eAAe,GAAIC,KAAD,IAAW,CAElC,CAFD;;AAIE,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;EACxC;EACA;EACA;EACAZ,eAAe,CAACa,GAAD,EAAM;IACnBD,QAAQ,CAACf,aAAa,CAACiB,eAAd,CAA8BD,GAA9B,CAAD,CAAR;EACD,CANuC,CAOxC;EACA;EACA;;;AATwC,CAAf,CAA3B;;AAYF,SAAQf,oBAAR;AACA,eAAeF,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,oBAA7C,CAAf"},"metadata":{},"sourceType":"module"}