{"ast":null,"code":"import { ActionCreator } from './action.js';\nimport { AuthorizationStatus, AppRoute, HttpCode, Status } from '../common/const.js';\nimport { adaptReviewToClient } from './adapter.js';\nexport const fetchBooksList = () => (dispatch, _getState, api) => api.get('http://localhost:3002/books/get').then(_ref => {\n  let {\n    data\n  } = _ref;\n  return dispatch(ActionCreator.getBooks(data));\n}).catch(() => {});\nexport const fetchBook = id => (dispatch, _getState, api) => api.get(`${'http://localhost:3002/books/get'}/${id}`).then(book => dispatch(ActionCreator.getBookPage(book.data))).catch(err => {\n  const {\n    response\n  } = err;\n\n  switch (response.status) {\n    case HttpCode.NOT_FOUND:\n      dispatch(ActionCreator.redirectToRoute(AppRoute.ERROR));\n      break;\n\n    default:\n      dispatch(ActionCreator.setErrorMessage(response.status));\n      break;\n  }\n});\nexport const fetchBookReviews = id => (dispatch, _getState, api) => api.get(`${'http://localhost:3002/comments/get'}/${id}`).then(_ref2 => {\n  let {\n    data\n  } = _ref2;\n  return dispatch(ActionCreator.getReviews(data));\n}).catch(() => {});\nexport const sendBookReview = (id, _ref3) => {\n  let {\n    rating,\n    comment,\n    username,\n    isPro,\n    avatarUrl\n  } = _ref3;\n  return (dispatch, _getState, api) => {\n    api.post(`${'http://localhost:3002/comments/post'}/${id}`, {\n      rating,\n      comment,\n      username,\n      isPro,\n      avatarUrl\n    }).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      return dispatch(ActionCreator.getReviews(data));\n    }).then(() => dispatch(ActionCreator.statusReviewSending(Status.SUCCESS))).catch(() => dispatch(ActionCreator.statusReviewSending(Status.ERROR)));\n  };\n};\nexport const fetchBookReader = id => (dispatch, _getState, api) => api.get(`${'http://localhost:3002/readers/get'}/${id}`).then(_ref5 => {\n  let {\n    data\n  } = _ref5;\n  return dispatch(ActionCreator.getReader(data));\n}).catch(() => {});\nexport const checkAuth = () => (dispatch, _getState, api) => api.get('http://localhost:3002/login/get').then(_ref6 => {\n  let {\n    data\n  } = _ref6;\n  return dispatch(ActionCreator.authorizationInfo(data));\n}).then(() => dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.AUTH))).catch(() => {});\nexport const logIn = _ref7 => {\n  let {\n    username: username,\n    email: email,\n    password: password\n  } = _ref7;\n  return (dispatch, _getState, api) => api.post('http://localhost:3002/login/post', {\n    username,\n    email,\n    password\n  }).then(_ref8 => {\n    let {\n      data\n    } = _ref8;\n    return dispatch(ActionCreator.authorizationInfo(data));\n  }).then(() => dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.AUTH))).then(() => dispatch(ActionCreator.redirectToRoute(AppRoute.MAIN))).catch(() => {});\n};\nexport const logOut = () => (dispatch, _getState, api) => api.get('http://localhost:3002/login/get').then(() => dispatch(ActionCreator.authorizationInfo({}))).then(() => dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.NO_AUTH))).catch(() => {});","map":{"version":3,"names":["ActionCreator","AuthorizationStatus","AppRoute","HttpCode","Status","adaptReviewToClient","fetchBooksList","dispatch","_getState","api","get","then","data","getBooks","catch","fetchBook","id","book","getBookPage","err","response","status","NOT_FOUND","redirectToRoute","ERROR","setErrorMessage","fetchBookReviews","getReviews","sendBookReview","rating","comment","username","isPro","avatarUrl","post","statusReviewSending","SUCCESS","fetchBookReader","getReader","checkAuth","authorizationInfo","requireAuthorization","AUTH","logIn","email","password","MAIN","logOut","NO_AUTH"],"sources":["/Users/Pavel/Documents/учёба/Программирование/Файлы/Books/client/src/store/api-actions.js"],"sourcesContent":["import {ActionCreator} from './action.js';\nimport {AuthorizationStatus, AppRoute, HttpCode, Status} from '../common/const.js';\nimport {adaptReviewToClient} from './adapter.js';\n\nexport const fetchBooksList = () => (dispatch, _getState, api) => (\n  api.get('http://localhost:3002/books/get')\n    .then(({data}) => dispatch(ActionCreator.getBooks(data)))\n    .catch(() => {})\n);\n\nexport const fetchBook = (id) => (dispatch, _getState, api) => (\n  api.get(`${'http://localhost:3002/books/get'}/${id}`)\n    .then((book) => dispatch(ActionCreator.getBookPage(book.data)))\n    .catch((err) => {\n      const {response} = err;\n      switch (response.status) {\n        case HttpCode.NOT_FOUND:\n          dispatch(ActionCreator.redirectToRoute(AppRoute.ERROR));\n          break;\n        default:\n          dispatch(ActionCreator.setErrorMessage(response.status));\n          break;\n      }\n    })\n);\n\nexport const fetchBookReviews = (id) => (dispatch, _getState, api) => (\n  api.get(`${'http://localhost:3002/comments/get'}/${id}`)\n    .then(({data}) => dispatch(ActionCreator.getReviews(data)))\n    .catch(() => {})\n);\n\nexport const sendBookReview = (id, {rating, comment, username, isPro, avatarUrl}) => (dispatch, _getState, api) => {\n  api.post(`${'http://localhost:3002/comments/post'}/${id}`, {rating, comment, username, isPro, avatarUrl})\n    .then(({data}) => dispatch(ActionCreator.getReviews(data)))\n    .then(() => dispatch(ActionCreator.statusReviewSending(Status.SUCCESS)))\n    .catch(() => dispatch(ActionCreator.statusReviewSending(Status.ERROR)));\n};\n\nexport const fetchBookReader = (id) => (dispatch, _getState, api) => (\n  api.get(`${'http://localhost:3002/readers/get'}/${id}`)\n    .then(({data}) => dispatch(ActionCreator.getReader(data)))\n    .catch(() => {})\n);\n\nexport const checkAuth = () => (dispatch, _getState, api) => (\n  api.get('http://localhost:3002/login/get')\n     .then(({data}) => dispatch(ActionCreator.authorizationInfo(data)))\n     .then(() => dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.AUTH)))\n     .catch(() => {})\n);\n\nexport const logIn = ({username: username, email: email, password: password}) => (dispatch, _getState, api) => (\n  api.post('http://localhost:3002/login/post', {username, email, password})\n    .then(({data}) => dispatch(ActionCreator.authorizationInfo(data)))\n    .then(() => dispatch((ActionCreator.requireAuthorization(AuthorizationStatus.AUTH))))\n    .then(() => dispatch(ActionCreator.redirectToRoute(AppRoute.MAIN)))\n    .catch(() => {})\n);\n\nexport const logOut = () => (dispatch, _getState, api) => (\n  api.get('http://localhost:3002/login/get')\n  .then(() => dispatch(ActionCreator.authorizationInfo({})))\n  .then(() => dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.NO_AUTH)))\n  .catch(() => {})\n);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}