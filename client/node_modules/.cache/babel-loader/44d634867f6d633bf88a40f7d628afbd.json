{"ast":null,"code":"var _jsxFileName = \"/Users/Pavel/Documents/\\u0443\\u0447\\u0435\\u0308\\u0431\\u0430/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u0424\\u0430\\u0438\\u0306\\u043B\\u044B/Books/client/src/components/reader/reader.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../header/header';\nimport Footer from '../footer/footer';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Chapter from '../chapter/chapter';\nimport TableOfContents from '../table-of-contents/table-of-contents';\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { AppRoute, MAX_NUMBER_BUTTONS } from '../../common/const';\nimport { ButtonTypes } from '../../common/const';\nimport { getBookReader, getBook } from '../../common/utils.js';\nimport { fetchBookReader } from \"../../store/api-actions\";\n/* const Reader = (props) => {\n\n    const {\n        onReaderDataRender,\n        activeBookId,\n        reader,\n        fontSize,\n      } = props;\n\n  useEffect(() => {\n    onReaderDataRender(activeBookId)\n    },[activeBookId]);\n\n  const {\n    chapters,\n    book\n  } = reader;\n  const chaptersNumbers = Array.from(new Set(reader.map((chapter) => chapter.id)));\n\nconst [selectForm, setSelectForm] = useState ({\n  value: 1,\n});\n\nconst handleChapterChange = (evt) => {\n  const {value} = evt.target;\n  setSelectForm({...selectForm, value});\n};\n\nconst index = selectForm.value;\nconst chapter = chapters[index - 1];\nconst {\n  chapterTitle\n} = chapter\n\nconst handleGoBackChapter = () => {\n    const {value} = [value - 1];\n    setSelectForm({...selectForm, value});\n};\n\n\nconst [rangeForm, setRangeForm] = useState ({\n    value: 14,\n  });\n\nconst handleFontSizeChange = (evt) => {\n    const {value} = evt.target;\n    setRangeForm({...rangeForm, value});\n  };\n\n  const font=rangeForm.value;\n\n return (\n  <>\n<div className=\"page light-theme\">\n\t<div className=\"main\">\n  <Header />\n    \n    <div className=\"breadcrumbs\">\n\t\t<Link to={AppRoute.MAIN}>Главная</Link>\n\t\t<Link to={getBook(activeBookId)}>{book.title}</Link>\n\t\t<Link className=\"active\" to={getBookReader(activeBookId)}>{chapterTitle}</Link>\n\t  </div>\n\n    <div className=\"reader\">\n        <div className=\"controls\">\n            <div className=\"settings contents\">\n                <label>Оглавление:\n                    <select name=\"content\" onChange={handleChapterChange}>\n                        <TableOfContents chapters={chapters} />\n                    </select>\n                </label>\n            </div>\n        <div className=\"settings size\">\n            <label> Размер текста: (<output name=\"pixels\" className=\"pixels\">{`${rangeForm.value}`}</output>px)\n                <input name=\"sizesetting\" className=\"size-setting\" type=\"range\" min=\"8\" max=\"48\" step=\"1\" value={rangeForm.value} onChange={handleFontSizeChange}/>\n            </label>          \n        </div>\n    </div>\n\n        <div className=\"paginator\">\n            <ul>\n                <li className={ButtonTypes.GO_BACK} onClick={handleGoBackChapter}>\n                    <a href=\"#prev\">Назад</a>\n                </li>\n                {chaptersNumbers.slice(0, MAX_NUMBER_BUTTONS).map((id) => {\n                  return (\n                    <li className={ButtonTypes.TURN_PAGE} key={id}>\n                      <a href=\"#1\">{id}</a>\n                    </li>\n                  );\n                })}\n                <li className={ButtonTypes.GO_FORWARD}>\n                    <a href=\"#next\">Вперёд</a>\n                </li>\n            </ul>\n        </div>\n            <Chapter chapters={chapters}  index={index} font={font}/>\n    </div>\n    \n\n<Footer />\n\n</div>\n<button className=\"up-button\" type=\"button\">\n    ↑\n    <span className=\"visually-hidden\">Наверх</span>\n  </button>\n</div>\n</>\n );\n};\n\nconst mapStateToProps = (state) => ({\n    reader: state.reader,\n    activeBookId: state.activeBookId,\n    fontSize: state.fontSize,\n  });\n  \n  const mapDispatchToProps = (dispatch) => ({\n    onReaderDataRender(id) {\n      dispatch(fetchBookReader(id));\n    },\n  });\n\nexport {Reader};\nexport default connect(mapStateToProps, mapDispatchToProps)(Reader); */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reader = props => {\n  _s();\n\n  const {\n    onReaderDataRender,\n    activeBookId,\n    reader,\n    fontSize,\n    book\n  } = props;\n  useEffect(() => {\n    onReaderDataRender(activeBookId);\n  }, []);\n  const chaptersNumbers = Array.from(new Set(reader.map(chapter => chapter.id)));\n  const [selectForm, setSelectForm] = useState({\n    value: 1\n  });\n\n  const handleChapterChange = evt => {\n    const {\n      value\n    } = evt.target;\n    setSelectForm({ ...selectForm,\n      value\n    });\n  };\n\n  const index = selectForm.value;\n\n  const handleGoBackChapter = () => {\n    const {\n      value\n    } = [value - 1];\n    setSelectForm({ ...selectForm,\n      value\n    });\n  };\n\n  const [rangeForm, setRangeForm] = useState({\n    value: 14\n  });\n\n  const handleFontSizeChange = evt => {\n    const {\n      value\n    } = evt.target;\n    setRangeForm({ ...rangeForm,\n      value\n    });\n  };\n\n  const font = rangeForm.value;\n  const chapter = reader[1];\n  console.log(chapter.chapterContent); // const {\n  // chapterTitle\n  // } = chapter\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page light-theme\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumbs\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: AppRoute.MAIN,\n            children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: getBook(activeBookId),\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings contents\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"\\u041E\\u0433\\u043B\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"content\",\n                  onChange: handleChapterChange,\n                  children: /*#__PURE__*/_jsxDEV(TableOfContents, {\n                    reader: reader\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings size\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" \\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430: (\", /*#__PURE__*/_jsxDEV(\"output\", {\n                  name: \"pixels\",\n                  className: \"pixels\",\n                  children: `${rangeForm.value}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 35\n                }, this), \"px)\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"sizesetting\",\n                  className: \"size-setting\",\n                  type: \"range\",\n                  min: \"8\",\n                  max: \"48\",\n                  step: \"1\",\n                  value: rangeForm.value,\n                  onChange: handleFontSizeChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paginator\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: ButtonTypes.GO_BACK,\n                onClick: handleGoBackChapter,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#prev\",\n                  children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 15\n              }, this), chaptersNumbers.slice(0, MAX_NUMBER_BUTTONS).map(id => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: ButtonTypes.TURN_PAGE,\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#1\",\n                    children: id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: ButtonTypes.GO_FORWARD,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#next\",\n                  children: \"\\u0412\\u043F\\u0435\\u0440\\u0451\\u0434\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Chapter, {\n            chapter: chapter,\n            font: font\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"up-button\",\n        type: \"button\",\n        children: [\"\\u2191\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"\\u041D\\u0430\\u0432\\u0435\\u0440\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Reader, \"obuNhhUayp3AdRyLnlUhYK6pXuY=\");\n\n_c = Reader;\n\nconst mapStateToProps = state => ({\n  reader: state.reader,\n  book: state.book,\n  activeBookId: state.activeBookId,\n  fontSize: state.fontSize\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onReaderDataRender(id) {\n    dispatch(fetchBookReader(id));\n  }\n\n});\n\nexport { Reader };\nexport default connect(mapStateToProps, mapDispatchToProps)(Reader);\n\nvar _c;\n\n$RefreshReg$(_c, \"Reader\");","map":{"version":3,"names":["React","Header","Footer","useParams","Link","Chapter","TableOfContents","useState","useEffect","connect","AppRoute","MAX_NUMBER_BUTTONS","ButtonTypes","getBookReader","getBook","fetchBookReader","Reader","props","onReaderDataRender","activeBookId","reader","fontSize","book","chaptersNumbers","Array","from","Set","map","chapter","id","selectForm","setSelectForm","value","handleChapterChange","evt","target","index","handleGoBackChapter","rangeForm","setRangeForm","handleFontSizeChange","font","console","log","chapterContent","MAIN","title","GO_BACK","slice","TURN_PAGE","GO_FORWARD","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["/Users/Pavel/Documents/учёба/Программирование/Файлы/Books/client/src/components/reader/reader.jsx"],"sourcesContent":["import React from 'react';\nimport Header from '../header/header';\nimport Footer from '../footer/footer';\nimport {useParams} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport Chapter from '../chapter/chapter';\nimport TableOfContents  from '../table-of-contents/table-of-contents';\nimport {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {AppRoute, MAX_NUMBER_BUTTONS} from '../../common/const';\nimport {ButtonTypes} from '../../common/const';\nimport {getBookReader, getBook} from '../../common/utils.js';\nimport {fetchBookReader} from \"../../store/api-actions\";\n\n/* const Reader = (props) => {\n\n    const {\n        onReaderDataRender,\n        activeBookId,\n        reader,\n        fontSize,\n      } = props;\n\n  useEffect(() => {\n    onReaderDataRender(activeBookId)\n    },[activeBookId]);\n\n  const {\n    chapters,\n    book\n  } = reader;\n  const chaptersNumbers = Array.from(new Set(reader.map((chapter) => chapter.id)));\n\nconst [selectForm, setSelectForm] = useState ({\n  value: 1,\n});\n\nconst handleChapterChange = (evt) => {\n  const {value} = evt.target;\n  setSelectForm({...selectForm, value});\n};\n\nconst index = selectForm.value;\nconst chapter = chapters[index - 1];\nconst {\n  chapterTitle\n} = chapter\n\nconst handleGoBackChapter = () => {\n    const {value} = [value - 1];\n    setSelectForm({...selectForm, value});\n};\n\n\nconst [rangeForm, setRangeForm] = useState ({\n    value: 14,\n  });\n\nconst handleFontSizeChange = (evt) => {\n    const {value} = evt.target;\n    setRangeForm({...rangeForm, value});\n  };\n\n  const font=rangeForm.value;\n\n return (\n  <>\n<div className=\"page light-theme\">\n\t<div className=\"main\">\n  <Header />\n    \n    <div className=\"breadcrumbs\">\n\t\t<Link to={AppRoute.MAIN}>Главная</Link>\n\t\t<Link to={getBook(activeBookId)}>{book.title}</Link>\n\t\t<Link className=\"active\" to={getBookReader(activeBookId)}>{chapterTitle}</Link>\n\t  </div>\n\n    <div className=\"reader\">\n        <div className=\"controls\">\n            <div className=\"settings contents\">\n                <label>Оглавление:\n                    <select name=\"content\" onChange={handleChapterChange}>\n                        <TableOfContents chapters={chapters} />\n                    </select>\n                </label>\n            </div>\n        <div className=\"settings size\">\n            <label> Размер текста: (<output name=\"pixels\" className=\"pixels\">{`${rangeForm.value}`}</output>px)\n                <input name=\"sizesetting\" className=\"size-setting\" type=\"range\" min=\"8\" max=\"48\" step=\"1\" value={rangeForm.value} onChange={handleFontSizeChange}/>\n            </label>          \n        </div>\n    </div>\n\n        <div className=\"paginator\">\n            <ul>\n                <li className={ButtonTypes.GO_BACK} onClick={handleGoBackChapter}>\n                    <a href=\"#prev\">Назад</a>\n                </li>\n                {chaptersNumbers.slice(0, MAX_NUMBER_BUTTONS).map((id) => {\n                  return (\n                    <li className={ButtonTypes.TURN_PAGE} key={id}>\n                      <a href=\"#1\">{id}</a>\n                    </li>\n                  );\n                })}\n                <li className={ButtonTypes.GO_FORWARD}>\n                    <a href=\"#next\">Вперёд</a>\n                </li>\n            </ul>\n        </div>\n            <Chapter chapters={chapters}  index={index} font={font}/>\n    </div>\n    \n\n<Footer />\n\n</div>\n<button className=\"up-button\" type=\"button\">\n    ↑\n    <span className=\"visually-hidden\">Наверх</span>\n  </button>\n</div>\n</>\n );\n};\n\nconst mapStateToProps = (state) => ({\n    reader: state.reader,\n    activeBookId: state.activeBookId,\n    fontSize: state.fontSize,\n  });\n  \n  const mapDispatchToProps = (dispatch) => ({\n    onReaderDataRender(id) {\n      dispatch(fetchBookReader(id));\n    },\n  });\n\nexport {Reader};\nexport default connect(mapStateToProps, mapDispatchToProps)(Reader); */\n\n\n\nconst Reader = (props) => {\n\n  const {\n      onReaderDataRender,\n      activeBookId,\n      reader,\n      fontSize,\n      book,\n    } = props;\n\nuseEffect(() => {\n  onReaderDataRender(activeBookId)\n  },[]);\n\nconst chaptersNumbers = Array.from(new Set(reader.map((chapter) => chapter.id)));\n\nconst [selectForm, setSelectForm] = useState ({\nvalue: 1,\n});\n\nconst handleChapterChange = (evt) => {\nconst {value} = evt.target;\nsetSelectForm({...selectForm, value});\n};\n\nconst index = selectForm.value;\n\n\nconst handleGoBackChapter = () => {\n  const {value} = [value - 1];\n  setSelectForm({...selectForm, value});\n};\n\nconst [rangeForm, setRangeForm] = useState ({\n  value: 14,\n});\n\nconst handleFontSizeChange = (evt) => {\n  const {value} = evt.target;\n  setRangeForm({...rangeForm, value});\n};\n\nconst font=rangeForm.value;\n\n\nconst chapter = reader[1];\nconsole.log(chapter.chapterContent);\n// const {\n// chapterTitle\n// } = chapter\n\nreturn (\n<>\n<div className=\"page light-theme\">\n<div className=\"main\">\n<Header />\n  \n  <div className=\"breadcrumbs\">\n  <Link to={AppRoute.MAIN}>Главная</Link>\n  <Link to={getBook(activeBookId)}>{book.title}</Link>\n  {/* <Link className=\"active\" to={getBookReader(activeBookId)}>{chapterTitle}</Link> */}\n  </div>\n\n  <div className=\"reader\">\n      <div className=\"controls\">\n          <div className=\"settings contents\">\n              <label>Оглавление:\n                  <select name=\"content\" onChange={handleChapterChange}>\n                      <TableOfContents reader={reader} />\n                  </select>\n              </label>\n          </div>\n      <div className=\"settings size\">\n          <label> Размер текста: (<output name=\"pixels\" className=\"pixels\">{`${rangeForm.value}`}</output>px)\n              <input name=\"sizesetting\" className=\"size-setting\" type=\"range\" min=\"8\" max=\"48\" step=\"1\" value={rangeForm.value} onChange={handleFontSizeChange}/>\n          </label>          \n      </div>\n  </div>\n\n      <div className=\"paginator\">\n          <ul>\n              <li className={ButtonTypes.GO_BACK} onClick={handleGoBackChapter}>\n                  <a href=\"#prev\">Назад</a>\n              </li>\n              {chaptersNumbers.slice(0, MAX_NUMBER_BUTTONS).map((id) => {\n                return (\n                  <li className={ButtonTypes.TURN_PAGE} key={id}>\n                    <a href=\"#1\">{id}</a>\n                  </li>\n                );\n              })}\n              <li className={ButtonTypes.GO_FORWARD}>\n                  <a href=\"#next\">Вперёд</a>\n              </li>\n          </ul>\n      </div>\n          <Chapter chapter={chapter} font={font}/>\n  </div>\n  \n\n<Footer />\n\n</div>\n<button className=\"up-button\" type=\"button\">\n  ↑\n  <span className=\"visually-hidden\">Наверх</span>\n</button>\n</div>\n</>\n);\n};\n\nconst mapStateToProps = (state) => ({\n  reader: state.reader,\n  book: state.book,\n  activeBookId: state.activeBookId,\n  fontSize: state.fontSize,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onReaderDataRender(id) {\n    dispatch(fetchBookReader(id));\n  },\n});\n\nexport {Reader};\nexport default connect(mapStateToProps, mapDispatchToProps)(Reader);"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA6B,wCAA7B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,kBAAlB,QAA2C,oBAA3C;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,aAAR,EAAuBC,OAAvB,QAAqC,uBAArC;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM;IACFC,kBADE;IAEFC,YAFE;IAGFC,MAHE;IAIFC,QAJE;IAKFC;EALE,IAMAL,KANN;EAQFT,SAAS,CAAC,MAAM;IACdU,kBAAkB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"},"metadata":{},"sourceType":"module"}