{"ast":null,"code":"var _jsxFileName = \"/Users/Pavel/Documents/\\u0443\\u0447\\u0435\\u0308\\u0431\\u0430/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u0424\\u0430\\u0438\\u0306\\u043B\\u044B/Books/client/src/components/button-is-favorite/button-is-favorite.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppRoute, AuthorizationStatus, ButtonTypes } from '../../common/const';\nimport { changeFavorite } from '../../store/api-actions';\nimport { connect } from \"react-redux\";\nimport { ActionCreator } from \"../../store/action\";\nimport { Link } from 'react-router-dom';\nimport { getBookReader } from '../../common/utils.js'; // const ButtonIsFavorite = (props) => {\n//   const {id, isFavorite, nameButton, authorizationStatus, onClick, redirectToLogin, addToFavorites} = props;\n//   const cardFavoriteHandler = () => {\n//     if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n//       redirectToLogin(AppRoute.LOGIN);\n//     } else {\n//       onClick({\n//         id,\n//         status: Number(!isFavorite)\n//       });\n//       if (nameButton === `ROOM`) {\n//         addToFavorites();\n//       }\n//     }\n//   };\n//   const bookmarkClass = isFavorite && ButtonTypes[nameButton].favorite;\n//   const bookmarkText = isFavorite ? `In bookmarks` : `To bookmarks`;\n//   return (\n//     <button\n//       onClick={() => cardFavoriteHandler()}\n//       className={`${ButtonTypes[nameButton].noFavorite} ${bookmarkClass} button`}\n//       type=\"button\"\n//       data-testid=\"button\"\n//     >\n//       <svg className={ButtonTypes[nameButton].icon} width={ButtonTypes[nameButton].width} height={ButtonTypes[nameButton].height}>\n//         <use xlinkHref=\"#icon-bookmark\"></use>\n//       </svg>\n//       <span className=\"visually-hidden\">{bookmarkText}</span>\n//     </button>\n//   );\n// };\n// const mapStateToProps = ({USER}) => ({\n//   authorizationStatus: USER.authorizationStatus,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   onClick(favoriteData) {\n//     dispatch(changeFavorite(favoriteData));\n//   },\n//   redirectToLogin(data) {\n//     dispatch(ActionCreator.redirectToRoute(data));\n//   },\n//   addToFavorites() {\n//     dispatch(ActionCreator.changeIsFavoritePlace());\n//   }\n// });\n// ButtonIsFavorite.propTypes = {\n//   id: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.number,\n//   ]).isRequired,\n//   isFavorite: PropTypes.bool.isRequired,\n//   nameButton: PropTypes.string.isRequired,\n//   authorizationStatus: PropTypes.string.isRequired,\n//   onClick: PropTypes.func.isRequired,\n//   redirectToLogin: PropTypes.func.isRequired,\n//   addToFavorites: PropTypes.func.isRequired,\n// };\n// export {ButtonIsFavorite};\n// export default connect(mapStateToProps, mapDispatchToProps)(ButtonIsFavorite);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonIsFavorite = props => {\n  const {\n    id,\n    isFavorite,\n    redirectToLogin,\n    authorizationStatus,\n    onClick,\n    addToFavorites\n  } = props;\n\n  const handlerAddToFavorites = () => {\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      redirectToLogin(AppRoute.LOGIN);\n    } else {\n      onClick({\n        id,\n        status: Number(!isFavorite)\n      });\n      addToFavorites();\n    }\n  };\n\n  console.log(isFavorite);\n  const bookmarkText = isFavorite ? `Убрать из библиотеки` : `Добавить в библиотеку`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-to-library\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      onClick: () => handlerAddToFavorites(),\n      children: bookmarkText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 6\n  }, this);\n}; // const mapStateToProps = (state) => {\n// }\n\n\n_c = ButtonIsFavorite;\n\nconst mapDispatchToProps = dispatch => ({\n  onClick(data) {\n    dispatch(changeFavorite(data));\n  },\n\n  redirectToLogin(url) {\n    dispatch(ActionCreator.redirectToRoute(url));\n  },\n\n  addToFavorites() {\n    dispatch(ActionCreator.changeIsFavoriteBook());\n  }\n\n});\n\nexport { ButtonIsFavorite };\nexport default connect(null, mapDispatchToProps)(ButtonIsFavorite);\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonIsFavorite\");","map":{"version":3,"names":["React","PropTypes","AppRoute","AuthorizationStatus","ButtonTypes","changeFavorite","connect","ActionCreator","Link","getBookReader","ButtonIsFavorite","props","id","isFavorite","redirectToLogin","authorizationStatus","onClick","addToFavorites","handlerAddToFavorites","NO_AUTH","LOGIN","status","Number","console","log","bookmarkText","mapDispatchToProps","dispatch","data","url","redirectToRoute","changeIsFavoriteBook"],"sources":["/Users/Pavel/Documents/учёба/Программирование/Файлы/Books/client/src/components/button-is-favorite/button-is-favorite.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {AppRoute, AuthorizationStatus, ButtonTypes} from '../../common/const';\nimport {changeFavorite} from '../../store/api-actions';\nimport {connect} from \"react-redux\";\nimport {ActionCreator} from \"../../store/action\";\nimport {Link} from 'react-router-dom';\nimport {getBookReader} from '../../common/utils.js';\n\n// const ButtonIsFavorite = (props) => {\n//   const {id, isFavorite, nameButton, authorizationStatus, onClick, redirectToLogin, addToFavorites} = props;\n\n//   const cardFavoriteHandler = () => {\n//     if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n//       redirectToLogin(AppRoute.LOGIN);\n//     } else {\n//       onClick({\n//         id,\n//         status: Number(!isFavorite)\n//       });\n//       if (nameButton === `ROOM`) {\n//         addToFavorites();\n//       }\n//     }\n//   };\n\n//   const bookmarkClass = isFavorite && ButtonTypes[nameButton].favorite;\n//   const bookmarkText = isFavorite ? `In bookmarks` : `To bookmarks`;\n\n//   return (\n//     <button\n//       onClick={() => cardFavoriteHandler()}\n//       className={`${ButtonTypes[nameButton].noFavorite} ${bookmarkClass} button`}\n//       type=\"button\"\n//       data-testid=\"button\"\n//     >\n//       <svg className={ButtonTypes[nameButton].icon} width={ButtonTypes[nameButton].width} height={ButtonTypes[nameButton].height}>\n//         <use xlinkHref=\"#icon-bookmark\"></use>\n//       </svg>\n//       <span className=\"visually-hidden\">{bookmarkText}</span>\n//     </button>\n//   );\n// };\n\n// const mapStateToProps = ({USER}) => ({\n//   authorizationStatus: USER.authorizationStatus,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onClick(favoriteData) {\n//     dispatch(changeFavorite(favoriteData));\n//   },\n//   redirectToLogin(data) {\n//     dispatch(ActionCreator.redirectToRoute(data));\n//   },\n//   addToFavorites() {\n//     dispatch(ActionCreator.changeIsFavoritePlace());\n//   }\n// });\n\n// ButtonIsFavorite.propTypes = {\n//   id: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.number,\n//   ]).isRequired,\n//   isFavorite: PropTypes.bool.isRequired,\n//   nameButton: PropTypes.string.isRequired,\n//   authorizationStatus: PropTypes.string.isRequired,\n//   onClick: PropTypes.func.isRequired,\n//   redirectToLogin: PropTypes.func.isRequired,\n//   addToFavorites: PropTypes.func.isRequired,\n// };\n\n// export {ButtonIsFavorite};\n// export default connect(mapStateToProps, mapDispatchToProps)(ButtonIsFavorite);\n\nconst ButtonIsFavorite = (props) => {\n  const {id, isFavorite, redirectToLogin, authorizationStatus, onClick, addToFavorites} = props;\n\n  const handlerAddToFavorites = () => {\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      redirectToLogin(AppRoute.LOGIN)\n    }\n    else {\n      onClick ({\n        id,\n        status: Number(!isFavorite)\n      });\n      addToFavorites();\n    }\n  }\n\n  console.log(isFavorite);\n\n\n  const bookmarkText = isFavorite ? `Убрать из библиотеки` : `Добавить в библиотеку`;\n\n  return (\n     <div className=\"add-to-library\" >\n       <Link to=\"#\" onClick={() => handlerAddToFavorites()}>{bookmarkText}</Link>\n     </div>\n  );\n\n};\n\n// const mapStateToProps = (state) => {\n  \n// }\n\n  const mapDispatchToProps = (dispatch) => ({\n    onClick(data) {\n      dispatch(changeFavorite(data));\n    },\n    redirectToLogin(url) {\n      dispatch(ActionCreator.redirectToRoute(url));\n    },\n    addToFavorites() {\n      dispatch(ActionCreator.changeIsFavoriteBook());\n    }\n  });\n\nexport {ButtonIsFavorite};\nexport default connect(null, mapDispatchToProps)(ButtonIsFavorite);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBC,mBAAlB,EAAuCC,WAAvC,QAAyD,oBAAzD;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,aAAR,QAA4B,uBAA5B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAClC,MAAM;IAACC,EAAD;IAAKC,UAAL;IAAiBC,eAAjB;IAAkCC,mBAAlC;IAAuDC,OAAvD;IAAgEC;EAAhE,IAAkFN,KAAxF;;EAEA,MAAMO,qBAAqB,GAAG,MAAM;IAClC,IAAIH,mBAAmB,KAAKZ,mBAAmB,CAACgB,OAAhD,EAAyD;MACvDL,eAAe,CAACZ,QAAQ,CAACkB,KAAV,CAAf;IACD,CAFD,MAGK;MACHJ,OAAO,CAAE;QACPJ,EADO;QAEPS,MAAM,EAAEC,MAAM,CAAC,CAACT,UAAF;MAFP,CAAF,CAAP;MAIAI,cAAc;IACf;EACF,CAXD;;EAaAM,OAAO,CAACC,GAAR,CAAYX,UAAZ;EAGA,MAAMY,YAAY,GAAGZ,UAAU,GAAI,sBAAJ,GAA6B,uBAA5D;EAEA,oBACG;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACE,QAAC,IAAD;MAAM,EAAE,EAAC,GAAT;MAAa,OAAO,EAAE,MAAMK,qBAAqB,EAAjD;MAAA,UAAsDO;IAAtD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADH;AAMD,CA3BD,C,CA6BA;AAEA;;;KA/BMf,gB;;AAiCJ,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;EACxCX,OAAO,CAACY,IAAD,EAAO;IACZD,QAAQ,CAACtB,cAAc,CAACuB,IAAD,CAAf,CAAR;EACD,CAHuC;;EAIxCd,eAAe,CAACe,GAAD,EAAM;IACnBF,QAAQ,CAACpB,aAAa,CAACuB,eAAd,CAA8BD,GAA9B,CAAD,CAAR;EACD,CANuC;;EAOxCZ,cAAc,GAAG;IACfU,QAAQ,CAACpB,aAAa,CAACwB,oBAAd,EAAD,CAAR;EACD;;AATuC,CAAf,CAA3B;;AAYF,SAAQrB,gBAAR;AACA,eAAeJ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkChB,gBAAlC,CAAf"},"metadata":{},"sourceType":"module"}